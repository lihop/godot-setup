"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const yargs_1 = __importDefault(require("yargs"));
const downloadRelease_1 = require("./downloadRelease");
const command = yargs_1.default
    .option('prerelease', {
    description: 'download prerelease',
    type: 'boolean',
    alias: 'p',
    default: false
})
    .option('search', {
    description: 'filter assets name, this can be regex',
    alias: 's',
    type: 'string',
})
    .option('quiet', {
    description: 'don\'t log to console',
    type: 'boolean',
    alias: 'q',
    default: false
})
    .option('zipped', {
    description: 'don\'t extract zip files',
    type: 'boolean',
    alias: 'z',
    default: false
})
    .positional('user', {
    description: 'The Github user',
    type: 'string',
})
    .requiresArg('user')
    .positional('repo', {
    description: 'The Github repo',
    type: 'string',
})
    .requiresArg('repo')
    .positional('outputdir', {
    description: 'The directory to download the assets to',
    type: 'string',
})
    .argv;
const user = command._[0];
const repo = command._[1];
const outputdir = command._[2] || process.cwd();
function filterRelease(release) {
    return release.draft === false && release.prerelease === !!command.prerelease;
}
function filterAsset(asset) {
    if (!command.search) {
        return true;
    }
    return new RegExp(command.search).test(asset.name);
}
(0, downloadRelease_1.downloadRelease)(user, repo, outputdir, filterRelease, filterAsset, !!command.zipped, !!command.quiet)
    .catch((err) => {
    console.error(err);
    process.exitCode = 1;
}).finally(() => {
    process.exit();
});
//# sourceMappingURL=cli.js.map