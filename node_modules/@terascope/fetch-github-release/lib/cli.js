"use strict";

require("core-js/modules/es.regexp.exec.js");

require("core-js/modules/es.string.search.js");

require("core-js/modules/es.regexp.constructor.js");

require("core-js/modules/es.regexp.to-string.js");

require("core-js/modules/es.function.name.js");

var _commander = _interopRequireDefault(require("commander"));

var _downloadRelease = _interopRequireDefault(require("./downloadRelease"));

var _package = require("../package.json");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

_commander["default"].version(_package.version).arguments('<user> <repo> [outputdir]').option('-p, --prerelease', 'download prerelease').option('-s, --search <regexp>', 'filter assets name').option('-q, --quiet', 'don\'t log to console').option('-z, --zipped', 'don\'t extract zip files').parse(process.argv);

var user = _commander["default"].args[0];
var repo = _commander["default"].args[1];
var outputdir = _commander["default"].args[2] || process.cwd();

if (!user || !repo) {
  _commander["default"].help();
}

function filterRelease(release) {
  return release.draft === false && release.prerelease === !!_commander["default"].prerelease;
}

function filterAsset(asset) {
  if (!_commander["default"].search) {
    return true;
  }

  return new RegExp(_commander["default"].search).exec(asset.name);
}

(0, _downloadRelease["default"])(user, repo, outputdir, filterRelease, filterAsset, !!_commander["default"].zipped, !!_commander["default"].quiet)["catch"](function (err) {
  return console.error(err.message);
});
